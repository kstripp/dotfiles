"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle Config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" --- Vundle Managed Plugins ----------------------------------------

" Solarized
Plugin 'altercation/vim-colors-solarized'

" HTML tag matching
Plugin 'valloric/MatchTagAlways'

" Jinj2 syntax highlighting
Plugin 'mitsuhiko/vim-jinja'

Plugin 'vim-airline/vim-airline'

" vim-tmux integration
Plugin 'christoomey/vim-tmux-navigator'

" QML syntax highlighting
Plugin 'peterhoeg/vim-qml'

" vim-latex
Plugin 'vim-latex/vim-latex'

" NERDTree
Plugin 'scrooloose/nerdtree'

" Vim ALE
Plugin 'w0rp/ale'

" Git Gutter
Plugin 'airblade/vim-gitgutter'

" Vim Fugitive
Plugin 'tpope/vim-fugitive'

" If a LocalPlugins file exists, load it
if filereadable(expand('$HOME/.vim/LocalPlugins.vim'))
    so $HOME/.vim/LocalPlugins.vim
endif

" --- End Vundle ----------------------------------------------------
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General Configuration
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable
set number
set expandtab
set virtualedit=onemore
set ts=4
set hlsearch!
set shiftwidth=4
set modeline
set nowrap
set autochdir
autocmd BufEnter *.m compiler mlint

"ctags
nnoremap <silent> <F8> :TlistToggle<CR>

"Sets separators used in keywords
" nice, but breaks TODO: highlighting
"set iskeyword=@,48-57,_,-,:,192-255

" This beauty remembers where you were the last time you edited the file, and returns to the same position.
" https://dev.launchpad.net/UltimateVimPythonSetup
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" If a LocalConfig file exists, load it
if filereadable(expand("$HOME/.vim/LocalConfig.vim"))
    :so $HOME/.vim/LocalConfig.vim
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Filetype specific
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"json syntax highlighting
autocmd BufNewFile,BufRead *.json set ft=javascript

"indentation macros
source $VIMRUNTIME/macros/matchit.vim
filetype indent on

"matlab mlint settings
"
"LaTeX
let tlist_tex_settings = 'latex;l:labels;s:sections;t:subsections;u:subsubsections'

" JPL ITAR and Copyright header
"source ${HOME}/.vim/headers/headers.vim

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin setup
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" vim-airline
set laststatus=2

"NERDTree
nnoremap <silent> <F6> :NERDTreeToggle<CR>

" Fugitive
map <leader>gd   :Gdiffsplit<CR>
map <leader>gp   :Gpush<CR>
map <leader>gs   :Git<CR>

" ALE
set completeopt=menu,menuone,preview,noselect,noinsert
let g:ale_python_pylint_executable = 'pylint3'
let g:ale_linters = {'systemverilog': ['vlog'], 'python': ['flake8', 'pylint', 'mypy']}
let g:ale_virtualtext_cursor = 0
let g:ale_completion_enabled = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Appearance
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" tmux doesn't communicate its background to VIM, so we have to tell it
set background=dark

"FIXME: For some reason this looks terrible
"colorscheme solarized

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Navigation
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" vim-tmux-navigator
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>
nnoremap <silent> <c-\> :TmuxNavigatePrevious<cr>
